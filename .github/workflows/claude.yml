name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Run Claude Code
        id: claude
        uses: grll/claude-code-base-action@beta
        with:
          prompt: "Please help with the request in this GitHub issue or PR comment. This is a BankPocket project - a financial application."
          allowed_tools: "Bash(git:*),View,GlobTool,GrepTool,BatchTool,Edit,Replace"
          model: "claude-3-7-sonnet-20250219"
          use_oauth: "true"
          claude_access_token: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
          claude_refresh_token: ${{ secrets.CLAUDE_REFRESH_TOKEN }}
          claude_expires_at: ${{ secrets.CLAUDE_EXPIRES_AT }}
          timeout_minutes: "15"

      # Claude の回答を GitHub issue/PR にコメントとして投稿
      - name: Post Claude response as comment
        if: steps.claude.outputs.conclusion == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            
            // Claude の実行結果ファイルを読み込み
            const executionFile = '${{ steps.claude.outputs.execution_file }}';
            
            try {
              const executionLog = JSON.parse(fs.readFileSync(executionFile, 'utf8'));
              
              // 最後のアシスタントメッセージを取得
              let claudeResponse = '';
              for (let i = executionLog.length - 1; i >= 0; i--) {
                if (executionLog[i].type === 'assistant' && executionLog[i].message && executionLog[i].message.content) {
                  const content = executionLog[i].message.content;
                  if (Array.isArray(content)) {
                    // content が配列の場合、text タイプのコンテンツを探す
                    for (const item of content) {
                      if (item.type === 'text') {
                        claudeResponse = item.text;
                        break;
                      }
                    }
                  } else if (typeof content === 'string') {
                    claudeResponse = content;
                  }
                  if (claudeResponse) break;
                }
              }
              
              if (claudeResponse) {
                // GitHub issue または PR comment を投稿
                let targetNumber;
                let commentBody = `## 🤖 Claude からの回答\n\n${claudeResponse}\n\n---\n*Generated by Claude Code*`;
                
                if (context.eventName === 'issues') {
                  targetNumber = context.issue.number;
                } else if (context.eventName === 'issue_comment') {
                  targetNumber = context.issue.number;
                } else if (context.eventName === 'pull_request_review_comment' || context.eventName === 'pull_request_review') {
                  targetNumber = context.issue.number;
                }
                
                if (targetNumber) {
                  await github.rest.issues.createComment({
                    issue_number: targetNumber,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: commentBody
                  });
                  console.log('Claude response posted successfully');
                } else {
                  console.log('Could not determine target issue/PR number');
                }
              } else {
                console.log('No Claude response found in execution log');
              }
            } catch (error) {
              console.error('Error processing Claude response:', error);
              console.log('Execution file content preview:');
              try {
                const content = fs.readFileSync(executionFile, 'utf8');
                console.log(content.substring(0, 1000) + '...');
              } catch (readError) {
                console.error('Could not read execution file:', readError);
              }
            }